package nz.ac.auckland.recipe.dto;

import java.util.Set;

import javax.persistence.ElementCollection;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import nz.ac.auckland.recipe.domain.*;
import nz.ac.auckland.recipe.jaxb.*;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

/* Class to represent a Baker. 
 * 
 * An instance of this class represents a DTO Baker. A DTO Baker includes
 * a subset of the Baker data - so that it is simplified, and DTO Baker objects are 
 * exchanged between clients and the Baker Web service.
 * 
 * A DTO Baker is described by:
 * - User name of the baker  
 * - most recent recipe added 
  * 
 * A Baker is uniquely identified by an id value of type long.
 * 
 */
@XmlRootElement(name="baker")
@XmlAccessorType(XmlAccessType.FIELD)
public class Baker {
	
	@XmlAttribute(name="id")
	private long _id;
	
	@XmlElement(name="username")
	private String _username;
	
//	@XmlJavaTypeAdapter(value=ReviewAdapter.class)
	@XmlAttribute(name="recipe")
	private Recipe _mostRecentRecipe; 
	
	protected Baker() {
		
	}
	
	/**
	 * Constructs a DTO Parolee instance. This method is intended to be called
	 * by Web service clients when creating new Parolees. The id field is not 
	 * required because it is generated by the Web service. Similarly, the 
	 * last-known-position field is not required. Of the constructor's 
	 * parameters, all fields must be non-null with the exception of curfew, 
	 * which is optional (not all Parolees are subject to a curfew).
     *
	 */
	public Baker(String username) throws IllegalArgumentException {
		this(0,username,null);
	}
	
	/**
	 * Constructs a DTO Parolee instance. This method should NOT be called by 
	 * Web Service clients. It is intended to be used by the Web Service 
	 * implementation when creating a DTO Parolee from a domain-model Parolee 
	 * object.
	 */
	public Baker(long id,
			String name,
			Recipe recipe
			) {
		
		_id = id;
		_username = name;
		_mostRecentRecipe = recipe; 
	}
	
	public long getId() {
		return _id;
	}
	
	
	public String getUsername() {
		return _username;
	}
	
	public void setUsername(String name) {
		_username = name;
	}

	
	@Override
	public String toString() {
		StringBuffer buffer = new StringBuffer();
				
		buffer.append("Baker: { [");
		buffer.append(_id);
		buffer.append("], ");
		if(_username != null) {
			buffer.append(_username);
		}
		buffer.append("; ");
				
		
		buffer.append(" }");
		
		return buffer.toString();
	}
	
	@Override
	public boolean equals(Object obj) {
		if (!(obj instanceof Baker))
            return false;
        if (obj == this)
            return true;

        Baker rhs = (Baker) obj;
        return new EqualsBuilder().
            append(_id, rhs._id).
            append(_username, rhs._username).
            isEquals();
	}
	
	@Override
	public int hashCode() {
		return new HashCodeBuilder(17, 31). 
	            append(_id).
	            append(_username).	            
	            toHashCode();
	}
}



